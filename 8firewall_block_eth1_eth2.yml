---
- name: Firewall Adjustment Script
  hosts: all
  remote_user: root
  vars:
    zones:
      - trusted
      - internal_no_internet
      - internal_internet
  tasks:
    - name: Transfer find network script
      copy:
        src: find_network_interfaces_same_pci.sh
        dest: /tmp
        mode: 0777

    - name: Transfer the firewall script that connects eth0 to public zone, eth1 to inernetNet, eth2 to internalNoNet, zerotier to trusted zone 
      copy:
        src: connect_ethernet_interfaces_to_zones.sh
        dest: /tmp
        mode: 0777

    - name: Install firewalld
      become: yes
      package:
        name: firewalld
        state: present

    - name: Start firewalld service
      become: yes
      service:
        name: firewalld
        state: started

    - name: Set default zone as public
      become: yes
      command: firewall-cmd --set-default-zone=public

    - name: Enable masquerade in the public zone
      become: yes
      command: firewall-cmd --zone=public --add-masquerade

    - name: Create missing zones
      become: true
      command: firewall-cmd --permanent --get-zones
      register: firewall_zones
      changed_when: false

    - name: Create trusted zone
      become: true
      command: firewall-cmd --permanent --new-zone=trusted
      when: "'trusted' not in firewall_zones.stdout_lines[0].split(' ')"
      changed_when: true

    - name: Create internal_internet (internalNet) zone
      become: true
      command: firewall-cmd --permanent --new-zone=internalNet
      when: "'internalNet' not in firewall_zones.stdout_lines[0].split(' ')"
      changed_when: true

    - name: Create internal_no_internet (internalNoNet) zone
      become: true
      command: firewall-cmd --permanent --new-zone=internalNoNet
      when: "'internalNoNet' not in firewall_zones.stdout_lines[0].split(' ')"
      changed_when: true

    - name: Create zerotier zone for Zerotier 
      become: true
      command: firewall-cmd --permanent --new-zone=zerotier
      when: "'zerotier' not in firewall_zones.stdout_lines[0].split(' ')"
      changed_when: true

    - name: Reload the firewall
      become: yes
      command: firewall-cmd --runtime-to-permanent
      command: firewall-cmd --reload
