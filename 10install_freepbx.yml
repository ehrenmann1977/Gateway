---
- name: Install FreePBX with Asterisk
  hosts: all
  become: yes

  tasks:
 #   - name: Import MongoDB GPG key
 #     apt_key:
 #       url: https://www.mongodb.org/static/pgp/server-5.0.asc
 #       state: present
 #
 #   - name: Add MongoDB repository
 #     apt_repository:
 #       repo: "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/debian {{ ansible_distribution_release }}/mongodb-org/5.0 main"
 #       state: present
 #       update_cache: yes

    - name: Update OS
      apt:
        update_cache: 'yes'
        upgrade: 'yes'

    - name: Install MongoDB package
      apt:
        name: mongodb-org
        state: present

    - name: Remove any previous FreePBX installation
      become: yes
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /usr/local/src/freepbx
        - /var/www/html/admin/modules/xmpp/node/node_modules/freepbx

    - name: Get Asterisk module status
      shell: asterisk -x 'module show like app_core.so'
      register: module_status
      changed_when: false

    - name: Check if core module is installed
      debug:
        msg: "Core module is installed"
      when: "'app_core.so' not in module_status.stdout"

    - name: Install Asterisk core module
      command: fwconsole ma install core
      when: "'app_core.so' not in module_status.stdout"

    - name: Install necessary packages
      apt:
        name:
          - build-essential
          - linux-headers-{{ ansible_kernel }}
          - openssh-server
          - apache2
          - mariadb-server
          - mariadb-client
          - bison
          - flex
          - python3-dev
          - php
          - php-curl
          - php-cli
          - php-pdo
          - php-mysql
          - php-pear
          - php-gd
          - php-mbstring
          - php-intl
          - php-bcmath
          - curl
          - sox
          - libncurses5-dev
          - libssl-dev
          - mpg123
          - libxml2-dev
          - libnewt-dev
          - sqlite3
          - libsqlite3-dev
          - pkg-config
          - automake
          - libtool
          - autoconf
          - git
          - unixodbc-dev
          - uuid
          - uuid-dev
          - libasound2-dev
          - libogg-dev
          - libvorbis-dev
          - libicu-dev
          - libcurl4-openssl-dev
          - libical-dev
          - libneon27-dev
          - libsrtp2-dev
          - libspandsp-dev
          - sudo
          - subversion
          - libtool-bin
          - unixodbc
          - dirmngr
          - sendmail-bin
          - sendmail
          - asterisk
          - debhelper-compat
          - cmake
          - libmariadb-dev
          - odbc-mariadb
          - php-ldap
          - util-linux
          - lame
          - ffmpeg
          - nodejs
          - npm
          - pkg-config
          - libicu-dev
#          - mongodb-org
#          - mongodb-org-server
#          - mongodb-org-shell
#          - mongodb-org-mongos
#          - mongodb-org-tools
        state: present
        update_cache: yes
      register: packages_result

    - name: Install pear
      apt:
        name: php-pear
        state: present

    - name: Install Console_Getopt
      shell: pear install Console_Getopt

    - name: Stop and disable Asterisk service
      systemd:
        name: asterisk
        state: stopped
        enabled: no

    - name: Create backup directory and move Asterisk files
      command: mkdir -p /etc/asterisk/DIST && mv /etc/asterisk/* /etc/asterisk/DIST
      args:
        creates: /etc/asterisk/DIST

    - name: Copy asterisk.conf from backup
      copy:
        src: /etc/asterisk/DIST/asterisk.conf
        dest: /etc/asterisk/asterisk.conf
      args:
        remote_src: no

    - name: Remove exclamation marks from asterisk.conf
      replace:
        path: /etc/asterisk/asterisk.conf
        regexp: '!'
        replace: ''
      args:
        backup: no

    - name: Create empty modules.conf file
      copy:
        content: ''
        dest: /etc/asterisk/modules.conf
      args:
        force: yes

    - name: Create empty cdr.conf file
      copy:
        content: ''
        dest: /etc/asterisk/cdr.conf
      args:
        force: yes

    - name: Adjust upload_max_filesize in php.ini
      replace:
        path: /etc/php/7.4/apache2/php.ini
        regexp: '^upload_max_filesize = .*'
        replace: 'upload_max_filesize = 20M'

    - name: Adjust memory_limit in php.ini
      replace:
        path: /etc/php/7.4/apache2/php.ini
        regexp: '^memory_limit = .*'
        replace: 'memory_limit = 1256M'

    - name: Adjust User and Group in apache2.conf
      replace:
        path: /etc/apache2/apache2.conf
        regexp: '^(User|Group).*'
        replace: '\1 asterisk'

    - name: Adjust AllowOverride in apache2.conf
      replace:
        path: /etc/apache2/apache2.conf
        regexp: '^AllowOverride None'
        replace: 'AllowOverride All'

    - name: Enable mod_rewrite
      command: a2enmod rewrite
      changed_when: false

    - name: Restart Apache service
      service:
        name: apache2
        state: restarted

    - name: Remove index.html
      file:
        path: /var/www/html/index.html
        state: absent

    - name: Create /etc/odbcinst.ini
      copy:
        dest: /etc/odbcinst.ini
        content: |
          [MySQL]
          Description = ODBC for MySQL (MariaDB)
          Driver = /usr/lib/x86_64-linux-gnu/odbc/libmaodbc.so
          FileUsage = 1

    - name: Create /etc/odbc.ini
      copy:
        dest: /etc/odbc.ini
        content: |
          [MySQL-asteriskcdrdb]
          Description = MySQL connection to 'asteriskcdrdb' database
          Driver = MySQL
          Server = localhost
          Database = asteriskcdrdb
          Port = 3306
          Socket = /var/run/mysqld/mysqld.sock
          Option = 3

    - name: Change to /usr/local/src directory
      become: yes
      shell: cd /usr/local/src

    - name: Download ffmpeg release
      become: yes
      shell: wget "https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz"

    - name: Extract ffmpeg archive
      become: yes
      shell: tar xf ffmpeg-release-amd64-static.tar.xz

    - name: Change to ffmpeg directory
      become: yes
      shell: cd ffmpeg-4*

    - name: Move ffmpeg binary to /usr/local/bin
      become: yes
      shell: mv ffmpeg /usr/local/bin

    - name: Change to /usr/local/src directory
      become: yes
      shell: cd /usr/local/src

    - name: Download FreePBX package
      get_url:
        url: http://mirror.freepbx.org/modules/packages/freepbx/7.4/freepbx-16.0-latest.tgz
        dest: /usr/local/src/freepbx-16.0-latest.tgz

    - name: Extract FreePBX package
      become: true
      unarchive:
        src: /usr/local/src/freepbx-16.0-latest.tgz
        dest: /usr/local/src/
        copy: false

    - name: Change to FreePBX directory
      become: yes
      shell: cd /usr/local/src/freepbx/

    - name: Start Asterisk
      command: /usr/local/src/freepbx/start_asterisk start

    - name: Install FreePBX
      become: yes
      shell: ./install -n

    - name: Disable commercial repository
      command: fwconsole ma disablerepo commercial

    - name: Install all FreePBX modules
      command: fwconsole ma installall

    - name: Delete the firewall module
      command: fwconsole ma delete firewall

    - name: Apply current FreePBX configuration
      command: fwconsole reload


    
    - name: Create directory and rename existing directory
      become: yes
      file:
        path: /usr/share/asterisk
        state: directory
        mode: '0755'

    - name: move default sound directory
      become: yes
      command:
        cmd: |
          mv /usr/share/asterisk/sounds /usr/share/asterisk/sounds-DIST

    - name: Set symlink to correct sound files
      become: yes
      file:
        src: /var/lib/asterisk/sounds
        dest: /usr/share/asterisk/sounds
        state: link
        force: yes

    - name: Restart to load Asterisk modules
      command: fwconsole restart

    - name: Create freepbx service file
      become: yes
      copy:
        dest: /etc/systemd/system/freepbx.service
        content: |
          [Unit]
          Description=FreePBX VoIP Server
          After=mariadb.service

          [Service]
          Type=oneshot
          RemainAfterExit=yes
          ExecStart=/usr/sbin/fwconsole start -q
          ExecStop=/usr/sbin/fwconsole stop -q

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      become: yes
      systemd:
        daemon_reload: yes

    - name: Enable FreePBX systemd service
      systemd:
        name: freepbx
        enabled: yes
      notify: restart freepbx

