#!/usr/bin/env ansible-playbook

---
- name: Create Ethernet file for bridge 0
  hosts: all
  become: yes
  gather_facts: no

  vars:
    bridge_ip_var: "{{ bridge_ip }}"
    bridge_netmask_var: "{{ bridge_netmask }}"
    network_id_var: "{{ network_id }}"
    without_internet_devices_string_var: "{{ without_internet_devices }}"
    with_internet_devices_string_var: "{{ with_internet_devices }}"


  tasks:
  - name: Create dummy file
    become: yes
    file:
      path: /etc/network/interfaces.d/br0
      state: touch

  - name: Check if dummy file exists
    become: yes
    stat:
      path: /etc/network/interfaces.d/br0
    register: file_stat

  - name: Report result
    debug:
      msg: "The dummy file exists"
    when: file_stat.stat.exists

  - name: Report result
    debug:
      msg: "The dummy file does not exist"
    when: not file_stat.stat.exists

  - name: Create Ethernet file for bridge 0
    lineinfile:
      dest: /etc/network/interfaces.d/br0
      line: "auto br0"
      state: present

  - name: Configure IP address for bridge 0
    lineinfile:
      dest: /etc/network/interfaces.d/br0
      line: "iface br0 inet static"
      state: present

  - name: Set bridge IP address
    lineinfile:
      dest: /etc/network/interfaces.d/br0
      line: "  address {{ bridge_ip }}"
      state: present

  - name: Set bridge netmask
    lineinfile:
      dest: /etc/network/interfaces.d/br0
      line: "  netmask {{ bridge_netmask }}"
      state: present

#  - name: Detect Zerotier network device name using given network id
#    shell: "zerotier-cli listnetworks | awk '{if ($3 == \"{{ zt_network_id }}\" ) print $8}'"
#    register: zt_device_name

#  - name: Debug Zerotier device name
#    debug:
#      msg: "Detected Zerotier device name {{ zt_device_name.stdout_lines }}"

#  - name: Add Zerotier Tap port to bridge
#    lineinfile:
#      dest: /etc/network/interfaces.d/br0
#      line: "  bridge_ports {{ item }}"
#      state: present
#    with_items: "{{ zt_device_name.stdout_lines }}"

  - name: Add Ethernet ports to bridge
    lineinfile:
      dest: /etc/network/interfaces.d/br0
      line: "  bridge_ports {{ item }}"
      state: present
    with_items: "{{ without_internet_devices_string_var.split(',') + with_internet_devices_string_var.split(',') | select('nonempty') }}"

  handlers:
    - name: restart network
      service:
        name: networking
        state: restarted

