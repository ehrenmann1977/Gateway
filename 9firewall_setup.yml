---
- name: Firewall Adjustment Script
  hosts: all
  remote_user: root
  vars:
    table_name: dt
    chain_name: incoming
    chain_name1: natting
    rule_name: ct

    zerotier_ip_range: "{{ zerotier_ip_range }}"
    without_internet_devices_string_var: "{{ without_internet_devices }}"
    with_internet_devices_string_var: "{{ with_internet_devices }}"
    main_router_devices_var: "{{ main_router_devices }}"

  tasks:
    - name: Install nftables
      become: yes
      package:
        name: nftables
        state: present

    - name: Enable and start nftables service
      service:
        name: nftables
        state: started
        enabled: true

    - name: Flush all nftables tables
      shell: |
        #!/bin/bash
        nft list tables |
        while read table; do
          nft delete $table
        done

    - name: Create nftables table dt
      command: nft add table dt

    - name: Add incoming chain to dt table
      command: nft add chain dt incoming { type filter hook input priority 0\; policy accept\; }

    - name: Add ct rule to incoming chain
      command: nft add rule dt incoming ct state related,established accept

    - name: Add chain natting to dt table
      become: true
      command: nft add chain dt natting { type nat hook postrouting priority 0\; policy accept\; }

    - name: print out internet interface
      debug:
        msg: "main router internet interface is {{ main_router_devices_var }}"

    - name: Add nft rule to drop incoming traffic on default gateway interface
      become: true
      command: nft add rule dt incoming iifname {{ item }} drop
      with_items: "{{ main_router_devices_var.split(',') }}"

    - name: Add nft masquerade gateway interface
      become: true
      command: nft add rule dt natting oifname {{ item }} masquerade
      with_items: "{{ main_router_devices_var.split(',') }}"

    - name: Save rules
      become: true
      shell: "nft list ruleset | tee /etc/nftables.conf"

    - name: Add OVS Firewall for each ethernet interface that is not allowed to have internet, can access only zt_ip_range
      become: true
      shell: "ovs-ofctl add-flow br0 'priority=200,ip,nw_dst={{ zerotier_ip_range }},in_port={{ item }},actions=normal'"
      loop: "{{ without_internet_devices_string_var.split(',') }}"

    - name: Add OVS Firewall for each PCI interface without_internet_devices, drop from it except zt_ip_range
      become: true
      shell: "ovs-ofctl add-flow br0 'priority=199,ip,in_port={{ item }},actions=drop'"
      loop: "{{ without_internet_devices_string_var.split(',') }}"

